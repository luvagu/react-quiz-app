{"version":3,"sources":["components/Header.jsx","components/Progress.jsx","components/Score.jsx","components/Question.jsx","components/Leaderboard.jsx","components/SaveScore.jsx","App.jsx","index.jsx"],"names":["Header","categories","handleSubmit","handleChange","loadingCategories","loadingQuestions","quizInProgress","defaultNumOfQuestions","onSubmit","className","htmlFor","id","onChange","map","category","value","name","defaultValue","type","min","max","step","disabled","Progress","questionNum","totalQuestions","percentage","style","width","Score","score","Question","question","handleAnswers","lastQuestion","gameEnded","useState","isAnswered","setIsAnswered","chosenAnwser","setChosenAnwser","useEffect","options","option","idx","answer","onClick","isCorrectAnswer","handleClick","Leaderboard","lsKey","leaderboard","setLeaderboard","localStorageData","JSON","parse","localStorage","getItem","arr","mergedEntriesIntoObject","reduce","acc","val","key","playerName","toLowerCase","Object","values","sort","a","b","mergeAndSortArray","scores","SaveScore","resetGame","setPlayerName","e","preventDefault","currentLeaderboard","playerData","Date","now","setItem","stringify","placeholder","target","trim","required","LS_SCORES_KEY","decodeString","string","text","document","createElement","innerHTML","App","fraction","total","setLoadingCategories","setLoadingQuestions","setCategories","amount","apiOptions","setApiOptions","questionsBank","setQuestionsBank","currentQuestion","setCurrentQuestion","setQuestionNum","setTotalQuestions","answers","setAnswers","setScore","setQuizInProgress","setGameEnded","axios","method","url","params","data","results","questionItem","index","correct_answer","wrongAnswers","incorrect_answers","Math","random","length","console","log","setNewScoreAndQuestionNum","useRef","current","newScore","cancel","cancelToken","CancelToken","c","then","trivia_categories","catch","error","isCancel","timeout","setTimeout","clearTimeout","prevOptions","floor","prevData","ReactDOM","render","StrictMode","getElementById"],"mappings":"oRAqEeA,MArEf,YAQI,IAPHC,EAOE,EAPFA,WACAC,EAME,EANFA,aACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,kBACAC,EAGE,EAHFA,iBACAC,EAEE,EAFFA,eACAC,EACE,EADFA,sBAEA,OACC,iCACC,uBAAMC,SAAUN,EAAhB,UACC,sBAAKO,UAAU,aAAf,UACC,uBAAOC,QAAQ,WAAf,sBACCN,EACA,yDAEA,wBAAQO,GAAG,WAAWC,SAAUT,EAAhC,SACEF,EAAWY,KAAI,SAAAC,GAAQ,OACvB,wBAAQC,MAAOD,EAASH,GAAxB,SACEG,EAASE,MADsBF,EAASH,YAO9C,sBAAKF,UAAU,aAAf,UACC,uBAAOC,QAAQ,aAAf,wBACA,yBAAQC,GAAG,aAAaM,aAAa,MAAML,SAAUT,EAArD,UACC,wBAAQY,MAAM,MAAd,4BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,wBAGF,sBAAKN,UAAU,aAAf,UACC,uBAAOC,QAAQ,OAAf,kBACA,yBAAQC,GAAG,OAAOM,aAAa,MAAML,SAAUT,EAA/C,UACC,wBAAQY,MAAM,MAAd,sBACA,wBAAQA,MAAM,WAAd,6BACA,wBAAQA,MAAM,UAAd,gCAGF,sBAAKN,UAAU,aAAf,UACC,uBAAOC,QAAQ,SAAf,uBACA,uBACCQ,KAAK,SACLP,GAAG,SACHQ,IAAI,IACJC,IAAI,KACJC,KAAK,IACLJ,aAAcV,EACdK,SAAUT,OAGZ,qBAAKM,UAAU,aAAf,SACC,wBACCA,UAAU,MACVS,KAAK,SACLI,SAAUlB,GAAqBE,EAHhC,SAKED,EAAmB,aAAeC,EAAiB,mBAAqB,8BCnDhEiB,MAVf,YAAgE,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WAChD,OACC,sBAAKjB,UAAU,qBAAf,UACC,sBAAKA,UAAU,gBAAf,sBAAyCe,EAAzC,OAA0DC,KAC1D,qBAAKhB,UAAU,mBAAf,SACC,qBAAKA,UAAU,eAAekB,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAL,cCIjCG,MATf,YAA2B,IAAVC,EAAS,EAATA,MACf,OACE,sBAAKrB,UAAU,kBAAf,UACE,qBAAKA,UAAU,aAAf,mBACA,qBAAKA,UAAU,eAAf,SAA+BqB,QCoDtBC,MAtDf,YAAyE,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,UAC1D,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAgBA,OALAC,qBAAU,WACTD,EAAgB,IAChBF,GAAc,KACZ,CAACN,IAGH,0BAASvB,UAAU,WAAnB,UACC,6BAAKuB,EAASA,WAEd,6BACEA,EAASU,QAAQ7B,KAAI,SAAC8B,EAAQC,GAAT,OACrBP,EACC,oBAEC5B,UAAS,oCACNkC,IAAWJ,EACVA,IAAiBP,EAASa,OACzB,UACA,UACDN,IAAiBP,EAASa,QAAUF,IAAWX,EAASa,OAAS,UAAY,GALxE,qBAFV,SAUEF,GATIA,GAYN,oBAAiBG,QAAS,kBAlCX,SAAAH,GACnBH,EAAgBG,GAChBL,GAAc,GACdL,EAAc,CACbtB,GAAIqB,EAASrB,GACboC,gBAAiBf,EAASa,SAAWF,IA6BFK,CAAYL,IAA5C,SACEA,GADOA,QAOXN,IAAeH,GAAgB,0DAA4B,sBAAMzB,UAAU,SAAhB,uBAE3D4B,GAAcH,GAAgB,6DAE9BG,GAAcH,IAAiBC,GAAa,0DAA4B,sBAAM1B,UAAU,SAAhB,2BCH7DwC,MA9Bf,YAAiC,IAAVC,EAAS,EAATA,MACtB,EAAsCd,mBAAS,MAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KAQA,OANAX,qBAAU,WACT,IAAMY,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQP,KAAW,KAC/DG,GACLD,EAtBwB,SAAAM,GACzB,IAAMC,EAA0BD,EAAIE,QAAO,SAACC,EAAKC,GAChD,IAAMC,EAAMD,EAAIE,WAAWC,cAM3B,OAJCJ,EAAIE,GADDA,KAAOF,EACV,2BAAgBA,EAAIE,IAApB,IAA0BjC,MAAO+B,EAAIE,GAAKjC,MAAQgC,EAAIhC,QAE3CgC,EAELD,IACL,IAIH,OAH+BK,OAAOC,OAAOR,GAAyBS,MACrE,SAACC,EAAGC,GAAJ,OAAUD,EAAEvC,MAAQwC,EAAExC,SAWPyC,CAAkBlB,MAC/B,CAACH,IAGH,sBAAKzC,UAAU,cAAf,UACC,0DACA,6BACE0C,EACAA,EAAYtC,KAAI,SAAC2D,EAAQ5B,GAAT,OACf,+BACU,IAARA,GAAa,gBACL,IAARA,GAAa,gBACL,IAARA,GAAa,gBACb4B,EAAOR,WAJT,MAIwBQ,EAAO1C,QAJtB0C,EAAO7D,OAQjB,sDCYU8D,MAnDf,YAAiD,IAA5B3C,EAA2B,EAA3BA,MAAOoB,EAAoB,EAApBA,MAAOwB,EAAa,EAAbA,UAClC,EAAoCtC,mBAAS,IAA7C,mBAAO4B,EAAP,KAAmBW,EAAnB,KAqBA,OACC,uBAAMlE,UAAU,aAAaD,SApBZ,SAAAoE,GAGjB,GAFAA,EAAEC,iBAEGb,GAAelC,GAAUoB,EAA9B,CAEA,IAAM4B,EAAqBxB,KAAKC,MAAMC,aAAaC,QAAQP,KAAW,KAEhE6B,EAAa,CAAEpE,GAAIqE,KAAKC,MAAOjB,aAAYlC,SAEjD0B,aAAa0B,QACZhC,EACAI,KAAK6B,UACJL,EAAkB,sBAAOA,GAAP,CAA2BC,IAAc,CAACA,KAI9DL,MAIA,UACE5C,EACA,eAAC,WAAD,WACC,+DACA,0EACA,uBACCZ,KAAK,OACLH,MAAOiD,EACPoB,YAAY,kBACZxE,SAAU,SAAAgE,GAAC,OAAID,EAAcC,EAAES,OAAOtE,MAAMuE,SAC5CC,UAAQ,IAET,wBAAQ9E,UAAU,MAAMS,KAAK,SAA7B,kBAGA,yCAGD,sEAGD,wBAAQT,UAAU,MAAMS,KAAK,SAAS4B,QAAS,kBAAM4B,KAArD,qCCrCGc,EAAgB,uBAEhBC,EAAe,SAAAC,GACpB,IAAMC,EAAOC,SAASC,cAAc,YAEpC,OADAF,EAAKG,UAAYJ,EACVC,EAAK5E,OAwLEgF,MAhLf,WACC,IAN4BC,EAAUC,EAMtC,EAAkD7D,oBAAS,GAA3D,mBAAOhC,EAAP,KAA0B8F,EAA1B,KACA,EAAgD9D,oBAAS,GAAzD,mBAAO/B,EAAP,KAAyB8F,EAAzB,KACA,EAAoC/D,mBAAS,IAA7C,mBAAOnC,EAAP,KAAmBmG,EAAnB,KACA,EAAoChE,mBAAS,CAAEiE,OAAQ,MAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CnE,mBAAS,IAAnD,mBAAOoE,EAAP,KAAsBC,EAAtB,KACA,EAA8CrE,mBAAS,MAAvD,mBAAOsE,EAAP,KAAwBC,EAAxB,KACA,EAAsCvE,mBAAS,GAA/C,mBAAOZ,EAAP,KAAoBoF,EAApB,KACA,EAA4CxE,mBAAS,GAArD,mBAAOX,EAAP,KAAuBoF,EAAvB,KACA,EAA8BzE,mBAAS,IAAvC,mBAAO0E,GAAP,KAAgBC,GAAhB,KACA,GAA0B3E,mBAAS,GAAnC,qBAAON,GAAP,MAAckF,GAAd,MACA,GAA4C5E,oBAAS,GAArD,qBAAO9B,GAAP,MAAuB2G,GAAvB,MACA,GAAkC7E,oBAAS,GAA3C,qBAAOD,GAAP,MAAkB+E,GAAlB,MAEMxC,GAAY,WACjB+B,EAAiB,IACjBE,EAAmB,MACnBC,EAAe,GACfC,EAAkB,GAClBE,GAAW,IACXC,GAAS,GACTC,IAAkB,GAClBC,IAAa,IAURhH,GAAY,uCAAG,WAAM0E,GAAN,iBAAAP,EAAA,6DACpBO,EAAEC,iBAEFH,KAEAyB,GAAoB,GALA,kBAOIgB,IAAM,CAC5BC,OAAQ,MACRC,IAAK,8BACLC,OAAO,eAAMhB,KAVK,gBAOXiB,EAPW,EAOXA,KAMRd,EACCc,EAAKC,QAAQ3G,KAAI,SAAC4G,EAAcC,GAC/B,IAAM7E,EAAS4C,EAAagC,EAAaE,gBACnCC,EAAY,sBACdH,EAAaI,kBAAkBhH,KAAI,SAAAwD,GAAC,OAAIoB,EAAapB,OADvC,CAEjBxB,IAED,MAAO,CACNlC,GAAG,GAAD,OAAK+G,EAAL,YAAc1C,KAAKC,OACrBjD,SAAUyD,EAAagC,EAAazF,UACpCa,OAAQA,EACRH,QAASkF,EAAaxD,MAAK,kBAAM0D,KAAKC,SAAW,WAIpDlB,EAAkBU,EAAKC,QAAQQ,QAC/Bf,IAAkB,GA7BC,kDA+BnBgB,QAAQC,IAAR,MA/BmB,QAiCpB/B,GAAoB,GAjCA,0DAAH,sDAyCZgC,GAA4BC,mBAsDlC,OApDAD,GAA0BE,QAAU,WACnC,IADyC,EACrCC,EAAW,EAD0B,cAEpBxB,IAFoB,IAEzC,2BAA8B,SAClB/D,kBAAiBuF,GAAY,MAHA,8BAKzCtB,GAASsB,GAEL9G,EAAcC,GACjBkF,EAAmBH,EAAchF,IACjCoF,EAAepF,EAAc,IAE7ByF,IAAkB,GAGfzF,IAAgBC,GAAgByF,IAAa,IAGlDzE,qBAAU,WAET,IAAI8F,EAiBJ,OAlBArC,GAAqB,GAGrBiB,IAAM,CACLC,OAAQ,MACRC,IAAK,uCACLmB,YAAa,IAAIrB,IAAMsB,aAAY,SAAAC,GAAC,OAAKH,EAASG,OAEjDC,MAAK,YAAe,IAAZpB,EAAW,EAAXA,KACRnB,EAAcmB,EAAKqB,mBACnB1C,GAAqB,MAErB2C,OAAM,SAAAC,GACF3B,IAAM4B,SAASD,KACnBb,QAAQC,IAAIY,GACZ5C,GAAqB,OAGhB,kBAAMqC,OACX,IAEH9F,qBAAU,WACTkE,EAAmBH,EAAc,IACjCI,EAAe,KACb,CAACJ,IAEJ/D,qBAAU,WACT,GAAKqE,GAAQkB,OAAb,CACA,IAAMgB,EAAUC,YAAW,WAC1Bd,GAA0BE,YACxB,KACH,OAAO,kBAAMa,aAAaF,OACxB,CAAClC,KAGH,eAAC,WAAD,WACC,cAAC,EAAD,CACC7G,WAAYA,EACZE,aA1GkB,SAAAyE,GACpB2B,GAAc,SAAA4C,GAAW,kCACrBA,GADqB,kBAEvBvE,EAAES,OAAO1E,GAAKiE,EAAES,OAAOtE,YAwGvBb,aAAcA,GACdE,kBAAmBA,EACnBC,iBAAkBA,EAClBC,eAAgBA,GAChBC,sBAAuB+F,EAAWD,SAGnC,sBAAK5F,UAAU,YAAf,WACGH,KAAmBmB,GACpB,cAAC,EAAD,CAAayB,MAAOsC,IAGpBkB,GACA,eAAC,WAAD,WACC,sBAAKjG,UAAU,eAAf,UACC,cAAC,EAAD,CACCe,YAAaA,EACbC,eAAgBA,EAChBC,YA3JqBsE,EA2JWxE,EA3JDyE,EA2JcxE,EA1JnC,IAAbuE,GAA4B,IAAVC,EAAoB,EACnC6B,KAAKsB,MAAkB,IAAXpD,EAAkBC,MA2J/B,cAAC,EAAD,CAAOnE,MAAOA,QAGf,cAAC,EAAD,CACCE,SAAU0E,EACVzE,cAzFgB,SAAAsF,GACrBR,IAAW,SAAAsC,GAAQ,4BAAQA,GAAR,CAAkB9B,OACrCP,GAAS,MAwFJ9E,aAAcV,IAAgBC,EAC9BU,UAAWA,QAKbA,IACA,cAAC,EAAD,CACCL,MAAOA,GACPoB,MAAOsC,EACPd,UAAWA,YCzLjB4E,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAED5D,SAAS6D,eAAe,W","file":"static/js/main.a121dc13.chunk.js","sourcesContent":["function Header({\r\n\tcategories,\r\n\thandleSubmit,\r\n\thandleChange,\r\n\tloadingCategories,\r\n\tloadingQuestions,\r\n\tquizInProgress,\r\n\tdefaultNumOfQuestions,\r\n}) {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='category'>Category</label>\r\n\t\t\t\t\t{loadingCategories ? (\r\n\t\t\t\t\t\t<span>Loading categories...</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<select id='category' onChange={handleChange}>\r\n\t\t\t\t\t\t\t{categories.map(category => (\r\n\t\t\t\t\t\t\t\t<option value={category.id} key={category.id}>\r\n\t\t\t\t\t\t\t\t\t{category.name}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='difficulty'>Difficulty</label>\r\n\t\t\t\t\t<select id='difficulty' defaultValue='any' onChange={handleChange}>\r\n\t\t\t\t\t\t<option value='any'>Any Difficulty</option>\r\n\t\t\t\t\t\t<option value='easy'>Easy</option>\r\n\t\t\t\t\t\t<option value='medium'>Medium</option>\r\n\t\t\t\t\t\t<option value='hard'>Hard</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='type'>Type</label>\r\n\t\t\t\t\t<select id='type' defaultValue='any' onChange={handleChange}>\r\n\t\t\t\t\t\t<option value='any'>Any Type</option>\r\n\t\t\t\t\t\t<option value='multiple'>Multiple Choice</option>\r\n\t\t\t\t\t\t<option value='boolean'>True / False</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='amount'>Questions</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tid='amount'\r\n\t\t\t\t\t\tmin='5'\r\n\t\t\t\t\t\tmax='50'\r\n\t\t\t\t\t\tstep='5'\r\n\t\t\t\t\t\tdefaultValue={defaultNumOfQuestions}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='btn'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tdisabled={loadingCategories || quizInProgress}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{loadingQuestions ? 'Loading...' : quizInProgress ? 'Quiz in progress' : 'Generate New Quiz'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","function Progress({ questionNum, totalQuestions, percentage }) {\r\n\treturn (\r\n\t\t<div className='progress-conatiner'>\r\n\t\t\t<div className='progress-text'>Question {questionNum} of {totalQuestions}</div>\r\n\t\t\t<div className='progress-bar-box'>\r\n\t\t\t\t<div className='progress-bar' style={{ width: `${percentage}%` }}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Progress\r\n","function Score({ score }) {\r\n  return (\r\n    <div className=\"score-container\">\r\n      <div className=\"score-text\">Score</div>\r\n      <div className=\"score-number\">{score}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Score\r\n","import { useEffect, useState } from 'react'\r\n\r\nfunction Question({ question, handleAnswers, lastQuestion, gameEnded }) {\r\n\tconst [isAnswered, setIsAnswered] = useState(false)\r\n\tconst [chosenAnwser, setChosenAnwser] = useState('')\r\n\r\n\tconst handleClick = option => {\r\n\t\tsetChosenAnwser(option)\r\n\t\tsetIsAnswered(true)\r\n\t\thandleAnswers({\r\n\t\t\tid: question.id,\r\n\t\t\tisCorrectAnswer: question.answer === option,\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetChosenAnwser('')\r\n\t\tsetIsAnswered(false)\r\n\t}, [question])\r\n\r\n\treturn (\r\n\t\t<article className='question'>\r\n\t\t\t<h2>{question.question}</h2>\r\n\t\t\t\r\n\t\t\t<ul>\r\n\t\t\t\t{question.options.map((option, idx) =>\r\n\t\t\t\t\tisAnswered ? (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\tclassName={`answered\r\n\t\t\t\t\t\t\t\t${option === chosenAnwser\r\n\t\t\t\t\t\t\t\t\t? chosenAnwser === question.answer\r\n\t\t\t\t\t\t\t\t\t\t? 'isRight'\r\n\t\t\t\t\t\t\t\t\t\t: 'isWrong'\r\n\t\t\t\t\t\t\t\t\t: chosenAnwser !== question.answer && option === question.answer ? 'isRight' : ''} \r\n\t\t\t\t\t\t\t`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<li key={option} onClick={() => handleClick(option)}>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\r\n\t\t\t{isAnswered && !lastQuestion && <p>Getting next question... <span className='loader'>⏳</span></p>}\r\n\r\n\t\t\t{isAnswered && lastQuestion && <p>Quiz has ended! 🏁</p>}\r\n\r\n\t\t\t{isAnswered && lastQuestion && !gameEnded && <p>Computing final score... <span className='loader'>⏳</span></p>}\r\n\t\t</article>\r\n\t)\r\n}\r\n\r\nexport default Question\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst mergeAndSortArray = arr => {\r\n\tconst mergedEntriesIntoObject = arr.reduce((acc, val) => {\r\n\t\tconst key = val.playerName.toLowerCase()\r\n\t\tif (key in acc) {\r\n\t\t\tacc[key] = { ...acc[key], score: acc[key].score + val.score }\r\n\t\t} else {\r\n\t\t\tacc[key] = val\r\n\t\t}\r\n\t\treturn acc\r\n\t}, {})\r\n\tconst sortedArrayByHighScore = Object.values(mergedEntriesIntoObject).sort(\r\n\t\t(a, b) => a.score < b.score\r\n\t)\r\n\treturn sortedArrayByHighScore\r\n}\r\n\r\nfunction Leaderboard({ lsKey }) {\r\n\tconst [leaderboard, setLeaderboard] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst localStorageData = JSON.parse(localStorage.getItem(lsKey)) || null\r\n\t\tif (!localStorageData) return\r\n\t\tsetLeaderboard(mergeAndSortArray(localStorageData))\r\n\t}, [lsKey])\r\n\r\n\treturn (\r\n\t\t<div className='leaderboard'>\r\n\t\t\t<h1>Leaderboard 🏆</h1>\r\n\t\t\t<ul>\r\n\t\t\t\t{leaderboard ? (\r\n\t\t\t\t\tleaderboard.map((scores, idx) => (\r\n\t\t\t\t\t\t<li key={scores.id}>\r\n\t\t\t\t\t\t\t{idx === 0 && '🥇 '}\r\n\t\t\t\t\t\t\t{idx === 1 && '🥈 '}\r\n\t\t\t\t\t\t\t{idx === 2 && '🥉 '}\r\n\t\t\t\t\t\t\t{scores.playerName} - {scores.score}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<li>No scores yet!</li>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Leaderboard\r\n","import { Fragment, useState } from 'react'\r\n\r\nfunction SaveScore({ score, lsKey, resetGame }) {\r\n\tconst [playerName, setPlayerName] = useState('')\r\n\r\n\tconst saveScore = e => {\r\n\t\te.preventDefault()\r\n\r\n\t\tif (!playerName || !score || !lsKey) return\r\n\r\n\t\tconst currentLeaderboard = JSON.parse(localStorage.getItem(lsKey)) || null\r\n\r\n\t\tconst playerData = { id: Date.now(), playerName, score }\r\n\r\n\t\tlocalStorage.setItem(\r\n\t\t\tlsKey,\r\n\t\t\tJSON.stringify(\r\n\t\t\t\tcurrentLeaderboard ? [...currentLeaderboard, playerData] : [playerData]\r\n\t\t\t)\r\n\t\t)\r\n\r\n\t\tresetGame()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className='score-form' onSubmit={saveScore}>\r\n\t\t\t{score ? (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<h3>You got a score! 🙌</h3>\r\n\t\t\t\t\t<p>Enter your name below to save your score.</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={playerName}\r\n\t\t\t\t\t\tplaceholder='Enter your name'\r\n\t\t\t\t\t\tonChange={e => setPlayerName(e.target.value.trim())}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<span>or</span>\r\n\t\t\t\t</Fragment>\r\n\t\t\t) : (\r\n\t\t\t\t<h3>You didn&apos;t get a score! 😥</h3>\r\n\t\t\t)}\r\n\r\n\t\t\t<button className='btn' type='button' onClick={() => resetGame()}>\r\n\t\t\t\tBack to Leaderboard\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default SaveScore\r\n","import { Fragment, useEffect, useRef, useState } from 'react'\nimport axios from 'axios'\nimport Header from './components/Header'\nimport Progress from './components/Progress'\nimport Score from './components/Score'\nimport Question from './components/Question'\nimport Leaderboard from './components/Leaderboard'\nimport SaveScore from './components/SaveScore'\n\nconst LS_SCORES_KEY = 'reactQuizLeaderboard'\n\nconst decodeString = string => {\n\tconst text = document.createElement('textarea')\n\ttext.innerHTML = string\n\treturn text.value\n}\n\nconst calculatePercentage = (fraction, total) => {\n\tif (fraction === 0 || total === 0) return 0\n\treturn Math.floor((fraction * 100) / total)\n}\n\nfunction App() {\n\tconst [loadingCategories, setLoadingCategories] = useState(false)\n\tconst [loadingQuestions, setLoadingQuestions] = useState(false)\n\tconst [categories, setCategories] = useState([])\n\tconst [apiOptions, setApiOptions] = useState({ amount: '5' })\n\tconst [questionsBank, setQuestionsBank] = useState([])\n\tconst [currentQuestion, setCurrentQuestion] = useState(null)\n\tconst [questionNum, setQuestionNum] = useState(0)\n\tconst [totalQuestions, setTotalQuestions] = useState(0)\n\tconst [answers, setAnswers] = useState([])\n\tconst [score, setScore] = useState(0)\n\tconst [quizInProgress, setQuizInProgress] = useState(false)\n\tconst [gameEnded, setGameEnded] = useState(false)\n\n\tconst resetGame = () => {\n\t\tsetQuestionsBank([])\n\t\tsetCurrentQuestion(null)\n\t\tsetQuestionNum(0)\n\t\tsetTotalQuestions(0)\n\t\tsetAnswers([])\n\t\tsetScore(0)\n\t\tsetQuizInProgress(false)\n\t\tsetGameEnded(false)\n\t}\n\n\tconst handleChange = e => {\n\t\tsetApiOptions(prevOptions => ({\n\t\t\t...prevOptions,\n\t\t\t[e.target.id]: e.target.value,\n\t\t}))\n\t}\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault()\n\n\t\tresetGame()\n\n\t\tsetLoadingQuestions(true)\n\t\ttry {\n\t\t\tconst { data } = await axios({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turl: 'https://opentdb.com/api.php',\n\t\t\t\tparams: { ...apiOptions },\n\t\t\t})\n\n\t\t\tsetQuestionsBank(\n\t\t\t\tdata.results.map((questionItem, index) => {\n\t\t\t\t\tconst answer = decodeString(questionItem.correct_answer)\n\t\t\t\t\tconst wrongAnswers = [\n\t\t\t\t\t\t...questionItem.incorrect_answers.map(a => decodeString(a)),\n\t\t\t\t\t\tanswer,\n\t\t\t\t\t]\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: `${index}-${Date.now()}`,\n\t\t\t\t\t\tquestion: decodeString(questionItem.question),\n\t\t\t\t\t\tanswer: answer,\n\t\t\t\t\t\toptions: wrongAnswers.sort(() => Math.random() - 0.5),\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t\tsetTotalQuestions(data.results.length)\n\t\t\tsetQuizInProgress(true)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t\tsetLoadingQuestions(false)\n\t}\n\n\tconst handleAnswers = data => {\n\t\tsetAnswers(prevData => [...prevData, data])\n\t\tsetScore('?')\n\t}\n\n\tconst setNewScoreAndQuestionNum = useRef()\n\n\tsetNewScoreAndQuestionNum.current = () => {\n\t\tlet newScore = 0\n\t\tfor (const answer of answers) {\n\t\t\tif (answer.isCorrectAnswer) newScore += 100\n\t\t}\n\t\tsetScore(newScore)\n\n\t\tif (questionNum < totalQuestions) {\n\t\t\tsetCurrentQuestion(questionsBank[questionNum])\n\t\t\tsetQuestionNum(questionNum + 1)\n\t\t} else {\n\t\t\tsetQuizInProgress(false)\n\t\t}\n\n\t\tif (questionNum === totalQuestions) setGameEnded(true)\n\t}\n\n\tuseEffect(() => {\n\t\tsetLoadingCategories(true)\n\t\tlet cancel\n\n\t\taxios({\n\t\t\tmethod: 'GET',\n\t\t\turl: 'https://opentdb.com/api_category.php',\n\t\t\tcancelToken: new axios.CancelToken(c => (cancel = c)),\n\t\t})\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetCategories(data.trivia_categories)\n\t\t\t\tsetLoadingCategories(false)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (axios.isCancel(error)) return\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetLoadingCategories(false)\n\t\t\t})\n\n\t\treturn () => cancel()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tsetCurrentQuestion(questionsBank[0])\n\t\tsetQuestionNum(1)\n\t}, [questionsBank])\n\n\tuseEffect(() => {\n\t\tif (!answers.length) return\n\t\tconst timeout = setTimeout(() => {\n\t\t\tsetNewScoreAndQuestionNum.current()\n\t\t}, 3000)\n\t\treturn () => clearTimeout(timeout)\n\t}, [answers])\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header\n\t\t\t\tcategories={categories}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\tloadingCategories={loadingCategories}\n\t\t\t\tloadingQuestions={loadingQuestions}\n\t\t\t\tquizInProgress={quizInProgress}\n\t\t\t\tdefaultNumOfQuestions={apiOptions.amount}\n\t\t\t/>\n\n\t\t\t<div className='container'>\n\t\t\t\t{!quizInProgress && !totalQuestions && (\n\t\t\t\t\t<Leaderboard lsKey={LS_SCORES_KEY} />\n\t\t\t\t)}\n\n\t\t\t\t{currentQuestion && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className='flex-between'>\n\t\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\t\tquestionNum={questionNum}\n\t\t\t\t\t\t\t\ttotalQuestions={totalQuestions}\n\t\t\t\t\t\t\t\tpercentage={calculatePercentage(questionNum, totalQuestions)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Score score={score} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Question\n\t\t\t\t\t\t\tquestion={currentQuestion}\n\t\t\t\t\t\t\thandleAnswers={handleAnswers}\n\t\t\t\t\t\t\tlastQuestion={questionNum === totalQuestions}\n\t\t\t\t\t\t\tgameEnded={gameEnded}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\n\t\t\t\t{gameEnded && (\n\t\t\t\t\t<SaveScore\n\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\tlsKey={LS_SCORES_KEY}\n\t\t\t\t\t\tresetGame={resetGame}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}