{"version":3,"sources":["components/Header.jsx","components/Progress.jsx","components/Score.jsx","components/Question.jsx","utils/fauna.helpers.js","components/Leaderboard.jsx","components/SaveScore.jsx","App.jsx","index.jsx"],"names":["Header","categories","handleSubmit","handleChange","loadingCategories","loadingQuestions","quizInProgress","defaultNumOfQuestions","onSubmit","className","htmlFor","id","onChange","disabled","map","category","value","name","defaultValue","type","min","max","step","Progress","questionNum","totalQuestions","percentage","style","width","Score","score","Question","question","handleAnswers","lastQuestion","gameEnded","useState","isAnswered","setIsAnswered","chosenAnwser","setChosenAnwser","useEffect","options","option","idx","answer","onClick","isCorrectAnswer","handleClick","client","Client","secret","process","Collection","query","Create","Index","FMap","Map","Get","Lambda","Match","Paginate","Var","createPlayer","data","a","getPlayers","player","ref","mergeAndSortArray","arr","mergedEntriesIntoObject","reduce","acc","val","key","toLowerCase","Object","values","sort","b","Leaderboard","setError","leaderboard","setLeaderboard","playerData","length","console","log","SaveScore","resetGame","playerName","setPlayerName","saveScore","e","preventDefault","trim","response","placeholder","target","required","decodeString","string","text","document","createElement","innerHTML","App","fraction","total","error","setLoadingCategories","setLoadingQuestions","setCategories","amount","apiOptions","setApiOptions","questionsBank","setQuestionsBank","currentQuestion","setCurrentQuestion","setQuestionNum","setTotalQuestions","answers","setAnswers","setScore","setQuizInProgress","setGameEnded","axios","method","url","params","results","questionItem","index","correct_answer","wrongAnswers","incorrect_answers","Date","now","Math","random","setNewScoreAndQuestionNum","useRef","current","newScore","cancel","cancelToken","CancelToken","c","then","trivia_categories","catch","isCancel","timeout","setTimeout","clearTimeout","prevOptions","floor","prevData","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14da9692.chunk.js","sourcesContent":["function Header({\r\n\tcategories,\r\n\thandleSubmit,\r\n\thandleChange,\r\n\tloadingCategories,\r\n\tloadingQuestions,\r\n\tquizInProgress,\r\n\tdefaultNumOfQuestions,\r\n}) {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='category'>Category</label>\r\n\t\t\t\t\t{loadingCategories ? (\r\n\t\t\t\t\t\t<span>Loading categories...</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<select id='category' onChange={handleChange} disabled={loadingCategories || quizInProgress}>\r\n\t\t\t\t\t\t\t{categories.map(category => (\r\n\t\t\t\t\t\t\t\t<option value={category.id} key={category.id}>\r\n\t\t\t\t\t\t\t\t\t{category.name}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='difficulty'>Difficulty</label>\r\n\t\t\t\t\t<select id='difficulty' defaultValue='any' onChange={handleChange} disabled={loadingCategories || quizInProgress}>\r\n\t\t\t\t\t\t<option value='any'>Any Difficulty</option>\r\n\t\t\t\t\t\t<option value='easy'>Easy</option>\r\n\t\t\t\t\t\t<option value='medium'>Medium</option>\r\n\t\t\t\t\t\t<option value='hard'>Hard</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='type'>Type</label>\r\n\t\t\t\t\t<select id='type' defaultValue='any' onChange={handleChange} disabled={loadingCategories || quizInProgress}>\r\n\t\t\t\t\t\t<option value='any'>Any Type</option>\r\n\t\t\t\t\t\t<option value='multiple'>Multiple Choice</option>\r\n\t\t\t\t\t\t<option value='boolean'>True / False</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='amount'>Questions</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tid='amount'\r\n\t\t\t\t\t\tmin='5'\r\n\t\t\t\t\t\tmax='50'\r\n\t\t\t\t\t\tstep='5'\r\n\t\t\t\t\t\tdefaultValue={defaultNumOfQuestions}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tdisabled={loadingCategories || quizInProgress}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='btn'\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tdisabled={loadingCategories || quizInProgress}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{loadingQuestions ? 'Loading...' : quizInProgress ? 'Quiz in progress' : 'Generate New Quiz'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","function Progress({ questionNum, totalQuestions, percentage }) {\r\n\treturn (\r\n\t\t<div className='progress-conatiner'>\r\n\t\t\t<div className='progress-text'>Question {questionNum} of {totalQuestions}</div>\r\n\t\t\t<div className='progress-bar-box'>\r\n\t\t\t\t<div className='progress-bar' style={{ width: `${percentage}%` }}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Progress\r\n","function Score({ score }) {\r\n  return (\r\n    <div className=\"score-container\">\r\n      <div className=\"score-text\">Score</div>\r\n      <div className=\"score-number\">{score}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Score\r\n","import { useEffect, useState } from 'react'\r\n\r\nfunction Question({ question, handleAnswers, lastQuestion, gameEnded }) {\r\n\tconst [isAnswered, setIsAnswered] = useState(false)\r\n\tconst [chosenAnwser, setChosenAnwser] = useState('')\r\n\r\n\tconst handleClick = option => {\r\n\t\tsetChosenAnwser(option)\r\n\t\tsetIsAnswered(true)\r\n\t\thandleAnswers({\r\n\t\t\tid: question.id,\r\n\t\t\tisCorrectAnswer: question.answer === option,\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetChosenAnwser('')\r\n\t\tsetIsAnswered(false)\r\n\t}, [question])\r\n\r\n\treturn (\r\n\t\t<article className='question'>\r\n\t\t\t<h2>{question.question}</h2>\r\n\t\t\t\r\n\t\t\t<ul>\r\n\t\t\t\t{question.options.map((option, idx) =>\r\n\t\t\t\t\tisAnswered ? (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\tclassName={`answered\r\n\t\t\t\t\t\t\t\t${option === chosenAnwser\r\n\t\t\t\t\t\t\t\t\t? chosenAnwser === question.answer\r\n\t\t\t\t\t\t\t\t\t\t? 'isRight'\r\n\t\t\t\t\t\t\t\t\t\t: 'isWrong'\r\n\t\t\t\t\t\t\t\t\t: chosenAnwser !== question.answer && option === question.answer ? 'isRight' : ''} \r\n\t\t\t\t\t\t\t`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<li key={option} onClick={() => handleClick(option)}>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\r\n\t\t\t{isAnswered && !lastQuestion && <p>Getting next question... <span className='loader'>⏳</span></p>}\r\n\r\n\t\t\t{isAnswered && lastQuestion && <p>Quiz has ended! 🏁</p>}\r\n\r\n\t\t\t{isAnswered && lastQuestion && !gameEnded && <p>Computing final score... <span className='loader'>⏳</span></p>}\r\n\t\t</article>\r\n\t)\r\n}\r\n\r\nexport default Question\r\n","import { Client, query } from 'faunadb'\r\n\r\nconst client = new Client({ secret: process.env.REACT_APP_FAUNADB })\r\n\r\nconst {\r\n\tCollection,\r\n\tCreate,\r\n\tIndex,\r\n\tMap: FMap,\r\n\tGet,\r\n\tLambda,\r\n\tMatch,\r\n\tPaginate,\r\n\tVar,\r\n} = query\r\n\r\nexport const createPlayer = async data => {\r\n\treturn await client.query(Create(Collection('playerScores'), { data }))\r\n}\r\n\r\nexport const getPlayers = async () => {\r\n\tconst { data } = await client.query(\r\n\t\tFMap(\r\n\t\t\tPaginate(Match(Index('allPlayerScores'))),\r\n\t\t\tLambda('ref', Get(Var('ref')))\r\n\t\t)\r\n\t)\r\n\r\n\treturn data.map(player => ({ ...player.data, id: player.ref.id }))\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getPlayers } from '../utils/fauna.helpers'\r\n\r\nconst mergeAndSortArray = arr => {\r\n\tconst mergedEntriesIntoObject = arr.reduce((acc, val) => {\r\n\t\tconst key = val.name.toLowerCase()\r\n\t\tif (key in acc) {\r\n\t\t\tacc[key] = { ...acc[key], score: acc[key].score + val.score }\r\n\t\t} else {\r\n\t\t\tacc[key] = val\r\n\t\t}\r\n\t\treturn acc\r\n\t}, {})\r\n\tconst sortedArrayByHighScore = Object.values(mergedEntriesIntoObject).sort(\r\n\t\t(a, b) => a.score < b.score\r\n\t)\r\n\treturn sortedArrayByHighScore\r\n}\r\n\r\nfunction Leaderboard({ setError }) {\r\n\tconst [leaderboard, setLeaderboard] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\t// setError(false)\r\n\t\t;(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst playerData = await getPlayers()\r\n\t\t\t\tif (!playerData.length) return\r\n\t\t\t\tsetLeaderboard(mergeAndSortArray(playerData))\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\tsetError('🙁 Error loading leaderboard.')\r\n\t\t\t}\r\n\t\t})()\r\n\t}, [setError])\r\n\r\n\treturn (\r\n\t\t<div className='leaderboard'>\r\n\t\t\t<h1>Leaderboard 🏆</h1>\r\n\t\t\t<ul>\r\n\t\t\t\t{leaderboard ? (\r\n\t\t\t\t\tleaderboard.map((player, idx) => (\r\n\t\t\t\t\t\t<li key={player.id}>\r\n\t\t\t\t\t\t\t{idx === 0 && '🥇 '}\r\n\t\t\t\t\t\t\t{idx === 1 && '🥈 '}\r\n\t\t\t\t\t\t\t{idx === 2 && '🥉 '}\r\n\t\t\t\t\t\t\t{player.name} - {player.score}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<li>No scores yet!</li>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Leaderboard\r\n","import { Fragment, useState } from 'react'\r\nimport { createPlayer } from '../utils/fauna.helpers'\r\n\r\nfunction SaveScore({ score, setError, resetGame }) {\r\n\tconst [playerName, setPlayerName] = useState('')\r\n\r\n\tconst saveScore = async e => {\r\n\t\te.preventDefault()\r\n\t\t// setError(false)\r\n\r\n\t\tif (!playerName || !score ) return\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await createPlayer({ name: playerName.trim(), score })\r\n\t\t\tconsole.log(response)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t\tsetError('🙁 Error saving player score.')\r\n\t\t}\r\n\r\n\t\tresetGame()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className='score-form' onSubmit={saveScore}>\r\n\t\t\t{score ? (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<h3>You got a score! 🙌</h3>\r\n\t\t\t\t\t<p>Enter your name below to save your score.</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={playerName}\r\n\t\t\t\t\t\tplaceholder='Enter your name'\r\n\t\t\t\t\t\tonChange={e => setPlayerName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<span>or</span>\r\n\t\t\t\t</Fragment>\r\n\t\t\t) : (\r\n\t\t\t\t<h3>You didn&apos;t get a score! 😥</h3>\r\n\t\t\t)}\r\n\r\n\t\t\t<button className='btn' type='button' onClick={() => resetGame()}>\r\n\t\t\t\tBack to Leaderboard\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default SaveScore\r\n","import { Fragment, useEffect, useRef, useState } from 'react'\nimport axios from 'axios'\nimport Header from './components/Header'\nimport Progress from './components/Progress'\nimport Score from './components/Score'\nimport Question from './components/Question'\nimport Leaderboard from './components/Leaderboard'\nimport SaveScore from './components/SaveScore'\n\n// const LS_SCORES_KEY = 'reactQuizLeaderboard'\n\nconst decodeString = string => {\n\tconst text = document.createElement('textarea')\n\ttext.innerHTML = string\n\treturn text.value\n}\n\nconst calculatePercentage = (fraction, total) => {\n\tif (fraction === 0 || total === 0) return 0\n\treturn Math.floor((fraction * 100) / total)\n}\n\nfunction App() {\n\tconst [error, setError] = useState(false)\n\tconst [loadingCategories, setLoadingCategories] = useState(false)\n\tconst [loadingQuestions, setLoadingQuestions] = useState(false)\n\tconst [categories, setCategories] = useState([])\n\tconst [apiOptions, setApiOptions] = useState({ amount: '10' })\n\tconst [questionsBank, setQuestionsBank] = useState([])\n\tconst [currentQuestion, setCurrentQuestion] = useState(null)\n\tconst [questionNum, setQuestionNum] = useState(0)\n\tconst [totalQuestions, setTotalQuestions] = useState(0)\n\tconst [answers, setAnswers] = useState([])\n\tconst [score, setScore] = useState(0)\n\tconst [quizInProgress, setQuizInProgress] = useState(false)\n\tconst [gameEnded, setGameEnded] = useState(false)\n\t\n\tconst resetGame = () => {\n\t\tsetQuestionsBank([])\n\t\tsetCurrentQuestion(null)\n\t\tsetQuestionNum(0)\n\t\tsetTotalQuestions(0)\n\t\tsetAnswers([])\n\t\tsetScore(0)\n\t\tsetQuizInProgress(false)\n\t\tsetGameEnded(false)\n\t}\n\n\tconst handleChange = e => {\n\t\tsetApiOptions(prevOptions => ({\n\t\t\t...prevOptions,\n\t\t\t[e.target.id]: e.target.value,\n\t\t}))\n\t}\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault()\n\n\t\tresetGame()\n\t\t// setError(false)\n\n\t\tsetLoadingQuestions(true)\n\t\ttry {\n\t\t\tconst { data } = await axios({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turl: 'https://opentdb.com/api.php',\n\t\t\t\tparams: { ...apiOptions },\n\t\t\t})\n\n\t\t\tif (!data.results.length) {\n\t\t\t\tsetError(\n\t\t\t\t\t'🙁 No questions found with the selected options. please try again!'\n\t\t\t\t)\n\t\t\t\tsetLoadingQuestions(false)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tsetQuestionsBank(\n\t\t\t\tdata.results.map((questionItem, index) => {\n\t\t\t\t\tconst answer = decodeString(questionItem.correct_answer)\n\t\t\t\t\tconst wrongAnswers = [\n\t\t\t\t\t\t...questionItem.incorrect_answers.map(a => decodeString(a)),\n\t\t\t\t\t\tanswer,\n\t\t\t\t\t]\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: `${index}-${Date.now()}`,\n\t\t\t\t\t\tquestion: decodeString(questionItem.question),\n\t\t\t\t\t\tanswer: answer,\n\t\t\t\t\t\toptions: wrongAnswers.sort(() => Math.random() - 0.5),\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t\tsetTotalQuestions(data.results.length)\n\t\t\tsetQuizInProgress(true)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tsetError(\n\t\t\t\t'🙁 Error loading questions from the API. Please try again later.'\n\t\t\t)\n\t\t}\n\t\tsetLoadingQuestions(false)\n\t}\n\n\tconst handleAnswers = data => {\n\t\tsetAnswers(prevData => [...prevData, data])\n\t\tsetScore('?')\n\t}\n\n\tconst setNewScoreAndQuestionNum = useRef()\n\n\tsetNewScoreAndQuestionNum.current = () => {\n\t\tlet newScore = 0\n\t\tfor (const answer of answers) {\n\t\t\tif (answer.isCorrectAnswer) newScore += 100\n\t\t}\n\t\tsetScore(newScore)\n\n\t\tif (questionNum < totalQuestions) {\n\t\t\tsetCurrentQuestion(questionsBank[questionNum])\n\t\t\tsetQuestionNum(questionNum + 1)\n\t\t} else {\n\t\t\tsetQuizInProgress(false)\n\t\t}\n\n\t\tif (questionNum === totalQuestions) setGameEnded(true)\n\t}\n\n\tuseEffect(() => {\n\t\tsetLoadingCategories(true)\n\t\t// setError(false)\n\n\t\tlet cancel\n\n\t\taxios({\n\t\t\tmethod: 'GET',\n\t\t\turl: 'https://opentdb.com/api_category.php',\n\t\t\tcancelToken: new axios.CancelToken(c => (cancel = c)),\n\t\t})\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetCategories(data.trivia_categories)\n\t\t\t\tsetLoadingCategories(false)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (axios.isCancel(error)) return\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetLoadingCategories(false)\n\t\t\t\tsetError(\n\t\t\t\t\t'🙁 Error loading categories from the API. Please try again later.'\n\t\t\t\t)\n\t\t\t})\n\n\t\treturn () => cancel()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tsetCurrentQuestion(questionsBank[0])\n\t\tsetQuestionNum(1)\n\t}, [questionsBank])\n\n\tuseEffect(() => {\n\t\tif (!answers.length) return\n\t\tconst timeout = setTimeout(() => setNewScoreAndQuestionNum.current(), 3000)\n\t\treturn () => clearTimeout(timeout)\n\t}, [answers])\n\n\tuseEffect(() => {\n\t\tconst timeout = setTimeout(() => setError(false), 5000)\n\t\treturn () => clearTimeout(timeout)\n\t}, [error])\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header\n\t\t\t\tcategories={categories}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\tloadingCategories={loadingCategories}\n\t\t\t\tloadingQuestions={loadingQuestions}\n\t\t\t\tquizInProgress={quizInProgress}\n\t\t\t\tdefaultNumOfQuestions={apiOptions.amount}\n\t\t\t/>\n\n\t\t\t<div className='container'>\n\t\t\t\t{error && <div className='error-message'>{error}</div>}\n\n\t\t\t\t{!quizInProgress && !totalQuestions && (\n\t\t\t\t\t<Leaderboard setError={setError} />\n\t\t\t\t)}\n\n\t\t\t\t{currentQuestion && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className='flex-between'>\n\t\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\t\tquestionNum={questionNum}\n\t\t\t\t\t\t\t\ttotalQuestions={totalQuestions}\n\t\t\t\t\t\t\t\tpercentage={calculatePercentage(questionNum, totalQuestions)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Score score={score} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Question\n\t\t\t\t\t\t\tquestion={currentQuestion}\n\t\t\t\t\t\t\thandleAnswers={handleAnswers}\n\t\t\t\t\t\t\tlastQuestion={questionNum === totalQuestions}\n\t\t\t\t\t\t\tgameEnded={gameEnded}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\n\t\t\t\t{gameEnded && (\n\t\t\t\t\t<SaveScore score={score} setError={setError} resetGame={resetGame} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}